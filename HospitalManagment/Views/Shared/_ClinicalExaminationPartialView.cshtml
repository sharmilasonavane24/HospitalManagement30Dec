@model HospitalManagment.Models.OPD

<script>
    $(function () {
        //Dropdownlist Selectedchange event
        $(document).ready(function () { changeBMI(); });
        $('#clinicalExamination_CurrentWeight').change(function () {

            changeBMI();

        })

        $('#Height').change(function () {

            changeBMI();

        })
    });
   
    function SaveInvestigations() {

        var file = new FormData($('form')[0]);
        debugger;
        $.ajax({
            url: '/HospitalManagment/OPD/UploadFile',
            type: "POST",
            data: file,
            cache: false,
            contentType: false,
            processData: false,
            success: function (result) {
                // alert("success");
                return false;
            },
            error: function () {
                alert("error");
            }
        });
    }

    function changeBMI() {

        var height = $("#Height").val();
        var weight = $("#clinicalExamination_CurrentWeight").val();
        if (height > 0) {
            height = (height * 0.01);
            var calculatedBMI = weight / (height * height)
            $("#clinicalExamination_BMI").val(calculatedBMI.toFixed(2));
        }
        else { $("#clinicalExamination_BMI").val(0); }
        $('#clinicalExamination_BMI').attr('readonly', true);
    }


    function GetDetails(sender) {
        debugger;

        var opdId = @Html.Raw(Json.Encode(Model.OPDID));
        if (  opdId > 0) {
        $.ajax({
            type: 'GET',
            url: "/HospitalManagment/OPD/ActionName",
            data: encodeURI("OpdId=" + opdId),
            success: function (view) {
                debugger;
                //alert(view);
                $('#PopUpDetailsResult').html(view);
                $('#PopUpDetailsResult').dialog();

            }            ,
            error: function (view) {
                alert(view);
                //$('#loaderSelectProducts').css('display', 'none');
            }
        });
        }
        else {
            alert("Please save clinical examination!");
            return false;
        }
    }

</script>

<div class="form-horizontal">
    <table border="0">
        <tr>
            <td id="tableText">
                <table>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.Pulse, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.clinicalExamination.Pulse, new { htmlAttributes = new { @class = "medium" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.Pulse, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.BP, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.clinicalExamination.BP, new { htmlAttributes = new { @class = "medium" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.BP, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.OtherGenFindings, htmlAttributes: new { @class = "control-label col-md-2" })@Html.Label("")
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.clinicalExamination.OtherGenFindings, new { htmlAttributes = new { @class = "medium" } })
                                </div>
                            </div>
                        </td>
                    </tr>

                    <tr>
                        <td>

                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.CurrentWeight, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.clinicalExamination.CurrentWeight, new { htmlAttributes = new { @class = "medium" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.CurrentWeight, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "medium" } })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.Label("BMI:")
                                <div>
                                    @Html.TextBoxFor(model => model.clinicalExamination.BMI, new { htmlAttributes = new { @class = "medium", @readonly = true } })
                                </div>
                            </div>
                        </td>
                    </tr>
                </table>

                <table>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.CNS, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.clinicalExamination.CNS, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.CNS, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>

                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.CVS, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.clinicalExamination.CVS, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.CVS, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.PS, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.clinicalExamination.PS, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.PS, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.PA, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.clinicalExamination.PA, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.PA, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.Rs, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.clinicalExamination.Rs, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.Rs, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.PV, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.clinicalExamination.PV, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.PV, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>

                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.positiveFidings, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.clinicalExamination.positiveFidings, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.positiveFidings, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </td>
                        <td>
                            <div class="form-group">
                                <div class="col-md-10">

                                    @*@Html.ActionLink("Investigations", "Investigations")*@
                                </div>
                            </div>

                        </td>
                    </tr>
                </table>
            </td>

        </tr>
    </table>





</div>

<div class="form-horizontal">





</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
