@*@model HospitalManagment.Models.OPD

<script>

    //If we removed document.ready datetimepicker will not work
    $(document).ready(function () { window.print(); });

</script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
       
    <body onload="window.print();" onfocus="window.close();"><br />
    <div>
        <br /><br /><br /><br /><br />
        <table>

            <tr>

                <td>OPD No:</td>
                <td>@Model.MonthOPDNo</td>
                <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>

                <td>Date:</td>
                <td>@DateTime.Now.ToString("dd-MMM-yyyy hh:mm")</td>
            </tr>
        </table>
        <hr/>
        <table>
            <tr>
                <td>Name:</td>
                <td>@Model.PatientFullName</td>
                <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
                <td>@Model.Age Years-@Model.Gender</td>

            </tr>
        </table>
        <hr/>
        <table>
            <tr>
                <td>Address:</td>
                <td>@Model.Address</td>
                <td>Contact No. @Model.Mobile</td>
            </tr>
        </table>
        <hr style="border-bottom: 3px solid black;"/>

        <table style="width: 100%">
            <thead>
            <tr>
                <td>Rx</td>

            </tr>
            </thead>
            <tbody style="width: 100%">

            @if (Model.prscriptionList != null && Model.prscriptionList.Count > 0)
            {
                foreach (var item in Model.prscriptionList)
                {
                    <tr style="border-bottom: 1px solid black;">
                        @{
                            string nameOfMedicine = string.Empty;
                            if (item.NameOfMedicine.Equals("Other"))
                            {
                                nameOfMedicine = item.newmedicine;
                            }
                            else
                            {
                                nameOfMedicine = item.NameOfMedicine;
                            }
                            string medicineDetails = string.Empty;
                            int quantity = 1;
                            switch (item.TypeOfMedicine)
                            {
                                case "Solution":
                                case "Syrup":
                                    medicineDetails = item.TypeOfMedicine + "  " + nameOfMedicine;
                                    break;
                                case "Tablet":
                                case "Capsule":
                                    medicineDetails = item.TypeOfMedicine + "  " + nameOfMedicine + "..." + item.Weight + " mg";
                                    quantity = item.Dosage * item.NumberOfDays;
                                    break;
                                case "Creame":
                                case "Ointment":
                                    medicineDetails = item.TypeOfMedicine + "  " + nameOfMedicine + "..." + item.Weight + " grm";
                                    break;
                                case "Injection":
                                    medicineDetails = item.TypeOfMedicine + "  " + nameOfMedicine;
                                    quantity = item.Dosage * item.NumberOfDays;
                                    break;
                                case "Saline":
                                    medicineDetails = item.TypeOfMedicine + "  " + nameOfMedicine + "..." + item.Weight + " ml";
                                    quantity = item.Dosage * item.NumberOfDays;
                                    break;
                                case "Drops":
                                    medicineDetails = item.TypeOfMedicine + "  " + nameOfMedicine;
                                    break;
                                case "Other":
                                    medicineDetails = item.TypeOfMedicine + "  " + nameOfMedicine + "..." + item.Weight;
                                    quantity = item.Dosage * item.NumberOfDays;
                                    break;
                            }

                            string dosageDetails = string.Empty;
                            switch (item.Dosage)
                            {
                                case 1:
                                    dosageDetails = "1 सकाळी ..." + item.NumberOfDays + " दिवस";
                                    break;
                                case 2:
                                    dosageDetails = "1 सकाळी  1 रात्री..." + item.NumberOfDays + " दिवस";
                                    break;
                                case 3:
                                    dosageDetails = "1 सकाळी 1 दुपारी  1 रात्री..." + item.NumberOfDays + " दिवस";
                                    break;
                                default:
                                    dosageDetails = "दररोज " + item.Dosage + " वेळा ..." + item.NumberOfDays + " दिवस";
                                    break;
                            }
                            string intakeAdv = string.Empty;
                            switch (item.TypeOfIntakeAdv)
                            {
                                case "After Food":
                                    intakeAdv = " जेवणानंतर ";
                                    break;
                                case "Before Food":
                                    intakeAdv = " जेवणा आधी ";
                                    break;
                                case "Before BedTime":
                                    intakeAdv = " झोपण्यापूर्वी ";
                                    break;
                                case "In The Morning After Get Up":
                                    intakeAdv = " सकाळी उठल्या नंतर ";
                                    break;
                                case "Not Applicable":
                                    intakeAdv = " ";
                                    break;
                                default:
                                    intakeAdv = " ";
                                    break;
                            }
                            <td width="50%">@medicineDetails <br/> @dosageDetails &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td width="10%">@intakeAdv</td>

                            <td width="10%">@quantity</td>

                            <td width="30%">@item.Comment</td>
                        }
                    </tr>
                }
                <tr>
                    <td colspan="3">
                        @{var opointmentDateTime = ((string[]) (@Model.prscriptionList[0].NextOpointmentDate))[0];
                            <label>Next visit Date and Time-- @opointmentDateTime</label>
                        }
                    </td>
                </tr>
                <tr>
                    <td colspan="3" style="text-align: end;">
                        <br/>
                        <br/>
                        <br/>
                        <label> .... Sign</label>
                    </td>
                </tr>
                <tr>
                    <td colspan="3">


                       
                    </td>
                </tr>
            }
            </tbody>
        </table>


        <table>
            <tr class="ad">
                <td width="20%">
                    <input type="button" value="Print" onclick="window.print();" name="Print"/>
                </td>
                <td width="20%">
                    <a href="javascript:void(0);" onclick="history.go(-1);">Back to OPD</a>
                </td>
                <td width="20%">
                    @Html.ActionLink("Back to List", "Search")
                </td>

            </tr>
        </table>


    </div>
    </body>
                                                }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
