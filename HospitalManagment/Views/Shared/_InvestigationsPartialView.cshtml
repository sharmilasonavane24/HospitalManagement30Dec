@model HospitalManagment.Models.OPD

<script>
    //$(function () {
    //    debugger;
    //    $('#file').change(function (event) {
    //        var tmppath = URL.createObjectURL(event.target.files[0]);


    //        var name = $("#file").val();
    //        // $("#file").val(tmppath);
    //        alert(tmppath);
    //    });
    //});



    function PreviousInvestigations()
    {
        debugger;
        var personId = @Html.Raw(Json.Encode(Model.PersonId));
        if (personId > 0) {
        $.ajax({
            type: 'GET',
            url: "/HospitalManagment/OPD/GetPreviousInvestigations",
            data: {
                personId: personId
            },
            success: function (view) {
                debugger;
                //alert(view);
                $('#PopUpDetailsResult').html(view);
                $('#PopUpDetailsResult').dialog({ width: 1000, height: 300 });

            }            ,
            error: function (view) {
                alert(view);
                //$('#loaderSelectProducts').css('display', 'none');
            }
        });
        }
        else {
            alert("Please save clinical examination!");
            return false;
          }


       
        //$.ajax({
        //    url: '/HospitalManagment/OPD/GetPreviousInvestigations',
        //    type: "POST",
        //    data: file,
        //    cache: false,
        //    //contentType: 'multipart/form-data',
        //    contentType: false,
        //    processData: false,
        //    success: function (result) {
        //        debugger;
        //        alert("success");
        //        return false;
        //    },
        //    error: function (result) {
        //        debugger;
        //        alert("error");
        //        return false;
        //    }
        //});
    }

    function SaveInvestigations() {

        var file = new FormData($('form')[0]);

        //alert(new FormData($('form')[0]));
        debugger;
        $.ajax({
            url: '/HospitalManagment/OPD/UploadFile',
            type: "POST",
            data: file,
            cache: false,
            //contentType: 'multipart/form-data',
            contentType: false,
            processData: false,
            success: function () {
                alert("success");
                return false;
            },
            error: function () {
                alert("error");
                return false;
            }
        });


    }
    function openLastAttachment() {

        debugger;
        $.ajax({
            url: '/HospitalManagment/OPD/OpdSavedAttachmet',
            type: "POST",
            data: file,
            cache: false,
            //contentType: 'multipart/form-data',
            contentType: false,
            processData: false,
            success: function (result) {
                debugger;
                alert("success");
                return false;
            },
            error: function (result) {
                debugger;
                alert("error");
                return false;
            }
        });

    }

    function SaveInvestigationsWithOutFile() {

        _InvestigationId = $("#investigations_InvestigationId").val();
        _OpdId = $("#OPDID").val();
        _BloodGroup = $("#investigations_BloodGroup").val();
        _HB = $("#investigations_HB").val();
        _RBS = $("#investigations_RBS").val();
        _HIVNII = $("#investigations_HIVNII").val();
        _HBSAvg = $("#investigations_HBSAvg").val();
        _VDRL = $("#investigations_VDRL").val();
        _UrineRM = $("#investigations_UrineRM").val();
        _SrCreat = $("#investigations_SrCreat").val();
        _SrUrea = $("#investigations_SrUrea").val();
        _SrTSH = $("#investigations_SrTSH").val();
        _HSG = $("#investigations_HSG").val();
        _SemenAnalysis = $("#investigations_SemenAnalysis").val();
        _USG = $("#investigations_USG").val();
        _Other = $("#investigations_Other").val();
        _AllAttachmentinOnePDF = "";
        _PersonId = $("#PersonId").val();
        //alert(_AllAttachmentinOnePDF);
        //    // };
        var investigations =
            {
                InvestigationId: _InvestigationId,
                OpdId: _OpdId,
                BloodGroup: _BloodGroup,
                HB: _HB,
                RBS: _RBS,
                HIVNII: _HIVNII,
                HBSAvg: _HBSAvg,
                VDRL: _VDRL,
                UrineRM: _UrineRM,
                SrCreat: _SrCreat,
                SrUrea: _SrUrea,
                SrTSH: _SrTSH,
                HSG: _HSG,
                SemenAnalysis: _SemenAnalysis,
                USG: _USG,
                Other: _Other,
                AllAttachmentinOnePDF: _AllAttachmentinOnePDF,
                PersonId: _PersonId
            };

        debugger;
        $.ajax({
            url: '/HospitalManagment/OPD/SaveInvestigations',
            type: "POST",
            //data: { Investigations: investigations },
            cache: false,
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ 'investigations': investigations }),
            //dataType: "json",
            processData: false,
            // async: false,
            success: function (result) {
                alert("success");
                return false;
            },
            error: function (result) {
                alert("error");
                return false;
            }
        });
    }
</script>

<table>
    <tr><td></td></tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.investigations.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.investigations.BloodGroup, new { htmlAttributes = new { @class = "medium" } })
        </td>
        <td>
            @Html.LabelFor(model => model.investigations.SrCreat, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.investigations.SrCreat, new { htmlAttributes = new { @class = "medium" } })
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.investigations.HB, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.investigations.HB, new { htmlAttributes = new { @class = "medium" } })
        </td>
        <td>
            @Html.LabelFor(model => model.investigations.SrUrea, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.investigations.SrUrea, new { htmlAttributes = new { @class = "medium" } })
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.investigations.RBS, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.investigations.RBS, new { htmlAttributes = new { @class = "medium" } })
        </td>
        <td>
            @Html.LabelFor(model => model.investigations.SrTSH, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.investigations.SrTSH, new { htmlAttributes = new { @class = "medium" } })
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.investigations.HIVNII, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.investigations.HIVNII, new { htmlAttributes = new { @class = "medium" } })
        </td>
        <td>
            @Html.LabelFor(model => model.investigations.HSG, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.TextAreaFor(model => model.investigations.HSG, new { htmlAttributes = new { @class = "medium" } })
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.investigations.HBSAvg, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.investigations.HBSAvg, new { htmlAttributes = new { @class = "medium" } })
        </td>
        <td>
            @Html.LabelFor(model => model.investigations.SemenAnalysis, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.TextAreaFor(model => model.investigations.SemenAnalysis, new { htmlAttributes = new { @class = "medium" } })             
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.investigations.VDRL, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.investigations.VDRL, new { htmlAttributes = new { @class = "medium" } })
        </td>
        <td>
            @Html.LabelFor(model => model.investigations.USG, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.TextAreaFor(model => model.investigations.USG, new { htmlAttributes = new { @class = "medium" } })            
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.investigations.UrineRM, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.investigations.UrineRM, new { htmlAttributes = new { @class = "medium" } })
        </td>
        <td>
            @Html.LabelFor(model => model.investigations.Other, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.TextAreaFor(model => model.investigations.Other, new { htmlAttributes = new { @class = "medium" } })
        </td>
    </tr>  
</table>
<table>
    <tr>
        <td>
            @Html.TextBox("file", "", new { type = "file" }) <br />
        </td>
        <td>
            <input type="button" name="submit" value="Upload File" onclick="return SaveInvestigations();" />
        </td>
        <td>
            <input type="button" name="submit" value="Previous Investigations" onclick="return PreviousInvestigations();" /> 
        </td>
    </tr>
    <tr>
        <td>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" name="submit" value="Save Investigations" onclick="return SaveInvestigationsWithOutFile();" />
                </div>
            </div>
        </td>
    </tr>
    @*<tr>
        <td>
            <input type="button" name="submit" value="Show File" onclick="return openLastAttachment();" />     
        </td>
    </tr>*@
    <tr>
       
    </tr>
</table>
<div id="PopUpDetailsResult">

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

