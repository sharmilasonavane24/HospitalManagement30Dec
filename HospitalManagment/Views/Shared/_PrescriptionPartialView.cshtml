@model HospitalManagment.Models.OPD
<script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>
<link href="~/Content/jquery-ui-timepicker-addon.min.css" rel="stylesheet" />
<script>

    //If we removed document.ready datetimepicker will not work
    $(document).ready(function () {
       $("#prscriptionList_0__NextOpointmentDate").datetimepicker({

            changeMonth: true,
            changeYear: true,
            yearRange: "-0:+1",
            dateFormat: 'dd-M-yy',
            controlType: 'select',
            timeFormat: 'hh:mm TT'
            //maxDate: "+2M +0D"

        });
    });


    function addRow() {
        var medicineName = $("#NameOfMedicine option:selected").text();
        var Dosage = $("#Dosage").val();
        var numberOfDays = $("#NumberOfDays").val();
        var comment = $("#Comment").val();
        var ManagementPlan = $("#ManagementPlan").val();

        var Medicine = $("#NewMedicine").val();
        var Weight = $("#NewWeight").val();
        var TypeOfMedicine = $("#TypeOfMedicine option:selected").text();
        //var index = $('#tablePost tr:last').index() + 1;
        var index = $('#tablePost tr').length;

        if (medicineName != "Select Medicine" && Dosage.length > 0 && numberOfDays.length > 0 && TypeOfMedicine != "" && TypeOfMedicine != "Select Medicine Type") {
            if ((medicineName == "Other" && Weight == "") || (medicineName == "Other" && Medicine == "")) {
                alert("Please update the value of New medicine and weight!")
                return false;
            }

            $("#tablePost > tbody").append("<tr id='tablePost" + index + "' data-medicineName='" +
                medicineName + "' data-Dosage='" + Dosage + "' data-numberOfDays='" + numberOfDays + "' data-comment='" + comment + "' data-ManagementPlan='" + ManagementPlan + "' data-NewMedicine='" + Medicine +
                "' data-Weight='" + Weight + "'data-TypeOfMedicine='" + TypeOfMedicine + "' ><td>" +
                medicineName + "</td><td>" + Dosage + "</td><td>" + numberOfDays + "</td><td>" + comment + "</td><td>" + ManagementPlan + "</td><td>"
                + TypeOfMedicine + "</td><td>" + Weight + "</td><td>" + Medicine + "</td><td><input id='btnAddBook' type='button'value= 'Remove' onclick= 'removeRow("
                + index + ");' /></td ></tr>");

            $("#tablePost").show();

            $("#Dosage").val('');
            $("#NumberOfDays").val('');
            $("#Comment").val('');
            $("#ManagementPlan").val('');
            $("#NewWeight").val(''); $("#NewMedicine").val('');
        }
        else {
            alert("Please update the value of Dosage and Number of days!")
            return false;
        }
        //$("#textNome").focus();
    }

    function SaveRow()
    {
        debugger;
       
        var listName = "prscriptionList";
        //var prscriptionList;
        var opdId = @Html.Raw(Json.Encode(Model.OPDID));
        if (  opdId > 0) {
            var qtd = 0;
            addRow();
            //if (Model.prscriptionList == null)
            {
                var prscriptionList = @Html.Raw(Json.Encode(Model.prscriptionList));
                if (prscriptionList.length > 0 && prscriptionList[prscriptionList.length - 1].Dosage <= 0 && prscriptionList[prscriptionList.length - 1].TypeOfMedicine == null) {
                  //  alert(' null');
                    //qtd = 0;
                }
                else
                {
                    abc = @Html.Raw(Json.Encode(Model.prscriptionList));
                   // qtd = abc.length - 1;
                }

            }

             var index = 1;
        $("#tablePost > tbody > tr").each(function () {
            debugger;
            var hv = $('#PrescriptionID' + index).val();
            index += 1;
            if (hv == undefined) {
                var PrescriptionID = $(this).data("PrescriptionID");
                var medicineName = $(this).data("medicinename");
                var Dosage = $(this).data("dosage");
                var numberOfDays = $(this).data("numberofdays");
                var comment = $(this).data("comment");
                var ManagementPlan = $(this).data("managementplan");

                var weight = $(this).data("weight");
                var TypeOfMedicine = $(this).data("typeofmedicine");
                var newMedicine = $(this).data("newmedicine");


                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].NameOfMedicine' value= '" + medicineName + "' > ");
                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].Dosage' value= '" + Dosage + "' > ");
                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].numberOfDays' value= '" + numberOfDays + "' > ");
                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].comment' value= '" + comment + "' > ");
                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].ManagementPlan' value= '" + ManagementPlan + "' > ");

                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].weight' value= '" + weight + "' > ");
                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].newmedicine' value= '" + newMedicine + "' > ");
                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].typeofmedicine' value= '" + TypeOfMedicine + "' > ");
            }
            else
            {
                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].NameOfMedicine' value= '" + $(this).find("td").eq(0).text().trim()  + "' > ");
                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].Dosage' value= '" + $(this).find("td").eq(1).text().trim() + "' > ");
                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].numberOfDays' value= '" + $(this).find("td").eq(2).text().trim() + "' > ");
                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].comment' value= '" + $(this).find("td").eq(3).text().trim() + "' > ");
                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].ManagementPlan' value= '" + $(this).find("td").eq(4).text().trim() + "' > ");

                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].weight' value= '" + $(this).find("td").eq(6).text().trim() + "' > ");
                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].newmedicine' value= '" + $(this).find("td").eq(7).text().trim() + "' > ");
                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].typeofmedicine' value= '" + $(this).find("td").eq(5).text().trim() + "' > ");
                $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].PrescriptionID' value= '" + hv + "' > ");



            }
            qtd += 1;
        });
        }
        else {
            alert("Please save clinical examination!");
            return false;
        }
    }

    function removeRow(id, PrescriptionID) {
        var controlToBeRemoved = "#tablePost" + id;
        $(controlToBeRemoved).remove();

        if (PrescriptionID > 0) {
            $.post("/HospitalManagment/OPD/DeleteMedicine", { prescriptionID: PrescriptionID, opd: test }, function (data) {

            });
        }
         
    }



    $(function () {
        //Dropdownlist Selectedchange event

        $('#NameOfMedicine').change(function () {

            if ($("#NameOfMedicine option:selected").text() == "Other") {

                $('#NewMedicine').attr('readonly', false);
            } else {

                $('#NewMedicine').attr('readonly', true);
            }

        })
    })
</script>




<div class="form-horizontal">

    <div class="form-group">
        @Html.LabelFor(model => model.prscriptionList[0].ManagementPlan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <textarea rows="3" id="ManagementPlan" class="form-control"></textarea>
        </div>
    </div>
    @Html.Label("Prescription")
    <hr />
    <table border="0">


        <tr>
            <td>Medicine:</td>
            <td>Type:</td>
            <td>Medicine Name:</td>
            <td>Dose(Per Day):</td>
            <td>Duration(In Days):</td>
            <td>Weight (In mg):</td>

        </tr>
        <tr>

            <td>
                <div class="form-group">
                    <div class="col-md-10">
                        @{
                    var data = TempData.Peek("MedicineNames") as SelectList;
                    if (data != null)
                    {
                        @Html.DropDownList("NameOfMedicine", data, "Select Medicine")
                        @Html.ValidationMessageFor(model => model.prscriptionList[0].NameOfMedicine, "", new { @class = "text-danger" })
            }
                        }
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">

                    <div class="col-md-10">
                        @{
                    var data1 = TempData.Peek("TypeOfMedicine") as SelectList;
                    if (data != null)
                    {
                        @Html.DropDownList("TypeOfMedicine", data1, "Tablet")
                        @Html.ValidationMessageFor(model => model.prscriptionList[0].TypeOfMedicine, "", new { @class = "text-danger" })
            }
                        }
                        @Html.ValidationMessageFor(model => model.prscriptionList[0].TypeOfMedicine, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>@Html.TextBox("NewMedicine")</td>
            <td>
                <div class="form-group">
                    <div class="col-md-10">
                        <input type="text" id="Dosage" class="medium" />
                        @Html.ValidationMessageFor(model => model.prscriptionList[0].Dosage, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    <div class="col-md-10">
                        <input type="text" id="NumberOfDays" class="medium" />
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group" id="MedicinesWeight">
                   
                    <div class="col-md-10">
                        @Html.TextBox("NewWeight", null, new { @class = "medium" })

                    </div>
                </div>
            </td>
        </tr>

    </table>
    <div class="form-group">
        @Html.LabelFor(model => model.prscriptionList[0].Comment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            
            <textarea rows="3" id="Comment" class="form-control"></textarea>
        </div>
    </div>

    <table border="0">

        <tr>


           
        </tr>



        <tr>

            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.prscriptionList[0].NextOpointmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.prscriptionList[0].NextOpointmentDate, new { Class = "input-group datepicker", @readonly = true })
                        @Html.ValidationMessageFor(model => model.prscriptionList[0].NextOpointmentDate, "", new { @class = "text-danger" })
                    </div>
                </div>

            </td>
        </tr>
    </table>


    <div class="form-group">

        <div class="col-md-10">

            @Html.ValidationMessageFor(model => model.prscriptionList[0].Comment, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            
        </div>
    </div>
    <div>
        <table id="tablePost" class="showborder">
            <thead>
                <tr>
                    <th>Medicine Name</th>
                    <th>Dosage</th>
                    <th>Number Of Days</th>
                    <th>Advise</th>
                    <th>ManagementPlan</th>
                    <th>Medicine Type</th>
                    <th>Weight</th>
                    <th>New Medicine</th>
                    <th>Remove</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.prscriptionList != null && Model.prscriptionList.Count > 0)
                {
                    int index = 0;
                    foreach (var item in Model.prscriptionList)
                    {
                        if (item.TypeOfMedicine != null)
                        {
                            index++;
                            var trid = string.Concat("tablePost", index);
                <tr id="@trid">
                    <td>
                        @item.NameOfMedicine
                        
                    </td>
                    <td>
                        @item.Dosage
   
                    </td>
                    <td>
                        @item.NumberOfDays
                    </td>
                    <td>
                        @item.Comment
                        
                    </td>
                    <td>
                        @item.ManagementPlan
                    </td>
                    <td>
                        @item.TypeOfMedicine
                        

                    </td>
                    <td>
                        @item.Weight
                        
                    </td>
                    <td>
                        @item.newmedicine
                    </td>
                    <td>
                        <input id='btnAddBook' type='button' value='Remove' onclick='return removeRow(  @index , @item.PrescriptionID );' />
                    </td>
                    @Html.Hidden("PrescriptionID" + index, item.PrescriptionID)
                </tr>
                        }
                    }
                }
            </tbody>
        </table>
    </div>
</div>



