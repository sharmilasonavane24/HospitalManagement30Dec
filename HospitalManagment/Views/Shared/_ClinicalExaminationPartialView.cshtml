@model HospitalManagment.Models.OPD

<script>
    $(function () {
        //Dropdownlist Selectedchange event
        $(document).ready(function () { changeBMI(); });
        $('#clinicalExamination_CurrentWeight').change(function () {

            changeBMI();

        })

        $('#Height').change(function () {

            changeBMI();

        })
    });
    function SaveInvestigationsWithOutFile() {

        _InvestigationId = $("#investigations_InvestigationId").val();
        _OpdId = $("#OPDID").val();
        _BloodGroup = $("#investigations_BloodGroup").val();
        _HB = $("#investigations_HB").val();
        _RBS = $("#investigations_RBS").val();
        _HIVNII = $("#investigations_HIVNII").val();
        _HBSAvg = $("#investigations_HBSAvg").val();
        _VDRL = $("#investigations_VDRL").val();
        _UrineRM = $("#investigations_UrineRM").val();
        _SrCreat = $("#investigations_SrCreat").val();
        _SrUrea = $("#investigations_SrUrea").val();
        _SrTSH = $("#investigations_SrTSH").val();
        _HSG = $("#investigations_HSG").val();
        _SemenAnalysis = $("#investigations_SemenAnalysis").val();
        _USG = $("#investigations_USG").val();
        _Other = $("#investigations_Other").val();
        _AllAttachmentinOnePDF = "";
        _PersonId = $("#PersonId").val();
        //alert(_AllAttachmentinOnePDF);
        //    // };
        var investigations =
            {
                InvestigationId: _InvestigationId,
                OpdId: _OpdId,
                BloodGroup: _BloodGroup,
                HB: _HB,
                RBS: _RBS,
                HIVNII: _HIVNII,
                HBSAvg: _HBSAvg,
                VDRL: _VDRL,
                UrineRM: _UrineRM,
                SrCreat: _SrCreat,
                SrUrea: _SrUrea,
                SrTSH: _SrTSH,
                HSG: _HSG,
                SemenAnalysis: _SemenAnalysis,
                USG: _USG,
                Other: _Other,
                AllAttachmentinOnePDF: _AllAttachmentinOnePDF,
                PersonId: _PersonId
            };

        debugger;
        $.ajax({
            url: '/HospitalManagment/OPD/SaveInvestigations',
            type: "POST",
            //data: { Investigations: investigations },
            cache: false,
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ 'investigations': investigations }),
            dataType: "json",
            processData: false,
            async: false,
            success: function (result) {
                alert("success");
                return false;
            },
            error: function () {
                alert("error");
                return false;
            }
        });
    }
    function SaveInvestigations() {

        var file = new FormData($('form')[0]);
        debugger;
        $.ajax({
            url: '/HospitalManagment/OPD/UploadFile',
            type: "POST",
            data: file,
            cache: false,
            contentType: false,
            processData: false,
            success: function (result) {
                alert("success");
                return false;
            },
            error: function () {
                alert("error");
            }
        });
    }

    function changeBMI() {

        var height = $("#Height").val();
        var weight = $("#clinicalExamination_CurrentWeight").val();
        if (height > 0) {
            height = (height * 0.01);
            var calculatedBMI = weight / (height * height)
            $("#clinicalExamination_BMI").val(calculatedBMI.toFixed(2));
        }
        else { $("#clinicalExamination_BMI").val(0); }
        $('#clinicalExamination_BMI').attr('readonly', true);
    }


    function GetDetails(sender) {
        debugger;

        var opdId = @Html.Raw(Json.Encode(Model.OPDID));
        if (  opdId > 0) {
        $.ajax({
            type: 'GET',
            url: "/HospitalManagment/OPD/ActionName",
            data: encodeURI("OpdId=" + opdId),
            success: function (view) {
                debugger;
                //alert(view);
                $('#PopUpDetailsResult').html(view);
                $('#PopUpDetailsResult').dialog();

            }            ,
            error: function (view) {
                alert(view);
                //$('#loaderSelectProducts').css('display', 'none');
            }
        });
        }
        else {
            alert("Please save clinical examination!");
            return false;
        }
    }

</script>

<div class="form-horizontal">
    <table border="0">
        <tr>
            <td id="tableText">
                <table>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.Pulse, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.clinicalExamination.Pulse, new { htmlAttributes = new { @class = "medium" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.Pulse, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.BP, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.clinicalExamination.BP, new { htmlAttributes = new { @class = "medium" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.BP, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.OtherGenFindings, htmlAttributes: new { @class = "control-label col-md-2" })@Html.Label("")
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.clinicalExamination.OtherGenFindings, new { htmlAttributes = new { @class = "medium" } })
                                </div>
                            </div>
                        </td>
                    </tr>

                    <tr>
                        <td>

                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.CurrentWeight, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.clinicalExamination.CurrentWeight, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.CurrentWeight, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "medium" } })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.Label("BMI:")
                                <div>
                                    @Html.TextBoxFor(model => model.clinicalExamination.BMI, new { htmlAttributes = new { @class = "medium", @readonly = true } })
                                </div>
                            </div>
                        </td>
                    </tr>
                </table>

                <table>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.CNS, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.clinicalExamination.CNS, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.CNS, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>

                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.CVS, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.clinicalExamination.CVS, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.CVS, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.PS, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.clinicalExamination.PS, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.PS, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.PA, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.clinicalExamination.PA, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.PA, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.Rs, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.clinicalExamination.Rs, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.Rs, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.PV, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.clinicalExamination.PV, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.PV, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>

                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.clinicalExamination.positiveFidings, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.clinicalExamination.positiveFidings, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.clinicalExamination.positiveFidings, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </td>
                        <td>
                            <div class="form-group">
                                <div class="col-md-10">

                                    @*@Html.ActionLink("Investigations", "Investigations")*@
                                </div>
                            </div>

                        </td>
                    </tr>
                </table>
            </td>
            <td id="tableText">


                @Html.Label("Investigations", "Investigations")
                <div id="borderBox">
                    <table>
                        <tr><td></td></tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.investigations.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.investigations.BloodGroup, new { htmlAttributes = new { @class = "medium" } })
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.investigations.SrCreat, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.investigations.SrCreat, new { htmlAttributes = new { @class = "medium" } })
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.investigations.HB, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.investigations.HB, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.investigations.SrUrea, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.investigations.SrUrea, new { htmlAttributes = new { @class = "medium" } })
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.investigations.RBS, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.investigations.RBS, new { htmlAttributes = new { @class = "medium" } })
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.investigations.SrTSH, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.investigations.SrTSH, new { htmlAttributes = new { @class = "medium" } })
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.investigations.HIVNII, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.investigations.HIVNII, new { htmlAttributes = new { @class = "medium" } })
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.investigations.HSG, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.investigations.HSG, new { htmlAttributes = new { @class = "medium" } })
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.investigations.HBSAvg, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.investigations.HBSAvg, new { htmlAttributes = new { @class = "medium" } })
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.investigations.SemenAnalysis, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.investigations.SemenAnalysis, new { htmlAttributes = new { @class = "medium" } })
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.investigations.VDRL, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.investigations.VDRL, new { htmlAttributes = new { @class = "medium" } })
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.investigations.USG, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.investigations.USG, new { htmlAttributes = new { @class = "medium" } })
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.investigations.UrineRM, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.investigations.UrineRM, new { htmlAttributes = new { @class = "medium" } })
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.investigations.Other, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.investigations.Other, new { htmlAttributes = new { @class = "medium" } })
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div>
                                    @Html.TextBox("file", "", new { type = "file" }) <br />

                                    <input type="button" name="submit" value="Upload File" onclick="return SaveInvestigations();" />

                                </div>

                                <div class="col-md-10">
                                    <input type="button" value="Save Investigations" onclick="return SaveInvestigationsWithOutFile();" />
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
            </td>
        </tr>
    </table>





</div>

<div class="form-horizontal">





</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
