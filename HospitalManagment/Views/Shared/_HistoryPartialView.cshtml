@model HospitalManagment.Models.OPD


<script>
    var currentYear = new Date().getFullYear() + 1;
    $(document).ready(function () {
        $("#history_EDDCorrectedByUSG").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: "dd-M-yy", minDate: -0,
            yearRange: "1900:" + currentYear
        });
    });

    $(function () {
        $("#history_EDD").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: "dd-M-yy", minDate: -0,
            yearRange: "1900:" + currentYear
        });
    });

    //$(function () {

    //    $("#history_FirstTTInjection").datepicker({
    //        changeMonth: true,
    //        changeYear: true,
    //        dateFormat: 'dd-M-yy',
    //        yearRange: "1900:" + currentYear
    //    });
    //});

    //$(function () {
    //    $("#history_SecondTTInjection").datepicker({
    //        changeMonth: true,
    //        changeYear: true,
    //        dateFormat: 'dd-M-yy',
    //        yearRange: "1900:" + currentYear
    //    });
    //});

    $(function () {
        $("#history_LMP").datepicker({
            dateFormat: 'dd-M-yy', maxDate: 0, changeMonth: true,
            changeYear: true, yearRange: "1900:" + currentYear,
            onSelect: function (dateText) {
                if (dateText != null) {
                    var actualDate = new Date(dateText);
                    var newDate = new Date(actualDate);
                    newDate.setDate(newDate.getDate() + 7);
                    newDate.setMonth(newDate.getMonth() + 9);
                    var str = $.datepicker.formatDate('dd-M-yy', newDate);
                    //EDD= LMP+7 days and 9 months
                    $("#history_EDD").val(str);// = newDate;
                }
            }
        });
    });
</script>

@*@using (Ajax.BeginForm("History", "OPD", new AjaxOptions { HttpMethod = "Post", Confirm = "R u sure?", Url = Url.Action("History", "OPD") }))
    {
        @Html.AntiForgeryToken()*@

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.history.HistoryId)
    <table>
        <tr>



            <td id="tableText">
                <div class="form-group">
                    @Html.LabelFor(model => model.history.ChiefComplains, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.history.ChiefComplains, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.history.ChiefComplains, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.history.PositiveFindings, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.history.PositiveFindings, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.history.PositiveFindings, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.history.AllergyDetails, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.history.AllergyDetails, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.history.AllergyDetails, "", new { @class = "text-danger" })
                    </div>
                </div>


            </td>

            <td>
                <div class="form-group">Menstrual History</div>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.history.LMP, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.history.LMP, new { Class = "input-group datepicker", @readonly = true })
                        @Html.ValidationMessageFor(model => model.history.LMP, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.history.EDD, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.history.EDD, new { Class = "input-group datepicker", @readonly = true })
                        @Html.ValidationMessageFor(model => model.history.EDD, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.history.CurrentCycle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.history.CurrentCycle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.history.CurrentCycle, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.history.EDDCorrectedByUSG, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.history.EDDCorrectedByUSG, new { Class = "input-group datepicker", @readonly = true })
                        @Html.ValidationMessageFor(model => model.history.EDDCorrectedByUSG, "", new { @class = "text-danger" })
                    </div>
                </div>
                <table>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.history.Menorche, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.history.Menorche, null, new { @class = "medium" })
                                    @Html.ValidationMessageFor(model => model.history.Menorche, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </td>
                        <td>
                            <div class="form-group">

                                @Html.LabelFor(model => model.history.MenoPause, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.history.MenoPause, null, new {@class = "medium"})
                                    @Html.ValidationMessageFor(model => model.history.MenoPause, "", new {@class = "text-danger"})
                                </div>
                            </div>
                        </td>

                    </tr>
                </table>

            </td>
            <td id="tableText" width="50%">

                <div>
                    <div class="form-group">Obstetric History</div>
                    <hr />
                    <table>


                        <tr>
                            <td>
                                G:@Html.TextBoxFor(model => model.history.Gravidity, null, new { @class = "small" })
                            </td>
                            @*<td>
                                    @Html.ValidationMessageFor(model => model.history.Gravidity, "", new { @class = "text-danger" })
                                </td>*@
                            <td>
                                P: @Html.TextBoxFor(model => model.history.Parity, null, new { @class = "small" })
                            </td>

                            @*<td>
                                    @Html.ValidationMessageFor(model => model.history.Parity, "", new { @class = "text-danger" })

                                </td>*@
                            <td>

                                L:@Html.TextBoxFor(model => model.history.LivingChildren, null, new { @class = "small" })
                            </td>
                            @*<td>
                                    @Html.ValidationMessageFor(model => model.history.LivingChildren, "", new { @class = "text-danger" })

                                </td>*@
                            <td>

                                A:@Html.TextBoxFor(model => model.history.Abortions, null, new { @class = "small" })
                            </td>
                            @*<td>
                                            @Html.ValidationMessageFor(model => model.history.Abortions, "", new { @class = "text-danger" })

                                </td>*@
                        </tr>


                    </table>

                </div>



                <div class="form-group">
                    @*@Html.LabelFor(model => model.history.Reminder, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.history.Reminder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.history.Reminder, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.history.FirstTTInjection, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.history.FirstTTInjection, new { })
                        @Html.ValidationMessageFor(model => model.history.FirstTTInjection, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.history.SecondTTInjection, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.history.SecondTTInjection, new { })
                        @Html.ValidationMessageFor(model => model.history.SecondTTInjection, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.history.HighRiskFactor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.history.HighRiskFactor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.history.HighRiskFactor, "", new { @class = "text-danger" })
                    </div>
                </div>


            </td>
        </tr>

    </table>
    <div class="form-group">
        @*@Html.LabelFor(model => model.PersonId, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.HiddenFor(model => model.PersonId, new { htmlAttributes = new { @class = "form-control" } })
            @* @Html.ValidationMessageFor(model => model.PersonId, "", new { @class = "text-danger" })*@
        </div>
    </div>



    @*class="btn btn-default"*@
</div>
@*}*@


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
