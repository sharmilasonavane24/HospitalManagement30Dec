@model HospitalManagment.Models.OPD
<script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>
<link href="~/Content/jquery-ui-timepicker-addon.min.css" rel="stylesheet" />
<script>

    //If we removed document.ready datetimepicker will not work
    $(document).ready(function () {
        $("#prscriptionList_0__NextOpointmentDate").datetimepicker({

            changeMonth: true,
            changeYear: true,
            yearRange: "-0:+1",
            dateFormat: 'dd-M-yy',
            controlType: 'select',
            timeFormat: 'hh:mm TT'
            //maxDate: "+2M +0D"

        });

        //$('#NameOfMedicine').selectmenu();
        $("#TypeOfIntakeAdv").blur(function () {
            debugger;

            $("#savePrescription").click();
            //   SaveRow();
            //var location = document.getElementById("TypeOfMedicine")
            //location.focus();

        });
    });



    function addRow() {
        debugger;
        var medicineName = $("#NameOfMedicine option:selected").text();
        var Dosage = $("#Dosage").val();
        var numberOfDays = $("#NumberOfDays").val();
        var comment = $("#Comment").val();
        var ManagementPlan = $("#ManagementPlan").val();

        var Medicine = $("#NewMedicine").val();
        var Weight = $("#NewWeight").val();
        var TypeOfMedicine = $("#TypeOfMedicine option:selected").text();
        var TypeOfIntakeAdv = $("#TypeOfIntakeAdv option:selected").text();
        //var _valTypeOfIntakeAdv = $("#TypeOfIntakeAdv option:selected").val();
        //var index = $('#tablePost tr:last').index() + 1;
        var index = $('#tablePost tr').length;

        if (medicineName != "Select Medicine" && TypeOfMedicine != "" && TypeOfMedicine != "Select Medicine Type") {
            if ((medicineName == "Other" && Weight == "") || (medicineName == "Other" && Medicine == "")) {
                alert("Please update the value of New medicine and weight!")
                return false;
            }

            $("#tablePost > tbody").append("<tr id='tablePost" + index + "'data-medicineName='" +
                medicineName + "'data-Dosage='" + Dosage + "'data-numberOfDays='" + numberOfDays + "'data-comment='" + comment + "'data-ManagementPlan='" + ManagementPlan + "'data-NewMedicine='" + Medicine +
                "'data-Weight='" + Weight + "'data-TypeOfMedicine='" + TypeOfMedicine + "'data-TypeOfIntakeAdv='" + TypeOfIntakeAdv + "'><td>" +
                medicineName + "</td><td>" + Dosage + "</td><td>" + numberOfDays + "</td><td>" + comment + "</td><td>" + ManagementPlan + "</td><td>"
                + TypeOfMedicine + "</td><td>" + Weight + "</td><td>" + Medicine + "</td><td>" + TypeOfIntakeAdv + "</td><td><input id='btnAddBook' type='button'value= 'Remove' onclick= 'removeRow("
                + index + ");' /></td ></tr>");

            $("#tablePost").show();

            $("#Dosage").val('');
            $("#NumberOfDays").val('');
            $("#Comment").val('');
            $("#ManagementPlan").val('');
            $("#NewWeight").val(''); $("#NewMedicine").val('');
            return true;
        }
        else {
            alert("Please select the value of Medicine name.")
            return false;
        }
        //$("#textNome").focus();
    }

    function SaveRow() {

        debugger;
        var listName = "prscriptionList";
        //var prscriptionList;
        var opdId = @Html.Raw(Json.Encode(Model.OPDID));
        if (opdId > 0) {
            var qtd = 0;

            if (addRow()) {


                var index = 1;

                $("#tablePost > tbody > tr").each(function () {
                    debugger;
                    var hv = $('#PrescriptionID' + index).val();
                    index += 1;
                    if (hv == undefined) {
                        var PrescriptionID = $(this).data("PrescriptionID");
                        var medicineName = $(this).data("medicinename");
                        var Dosage = $(this).data("dosage");
                        var numberOfDays = $(this).data("numberofdays");
                        var comment = $(this).data("comment");
                        var ManagementPlan = $(this).data("managementplan");

                        var weight = $(this).data("weight");
                        var TypeOfMedicine = $(this).data("typeofmedicine");
                        var newMedicine = $(this).data("newmedicine");
                        var TypeOfIntakeAdv = $(this).data("typeofintakeadv");

                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].NameOfMedicine' value= '" + medicineName + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].Dosage' value= '" + Dosage + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].numberOfDays' value= '" + numberOfDays + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].comment' value= '" + comment + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].ManagementPlan' value= '" + ManagementPlan + "' > ");

                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].weight' value= '" + weight + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].newmedicine' value= '" + newMedicine + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].typeofmedicine' value= '" + TypeOfMedicine + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].TypeOfIntakeAdv' value= '" + TypeOfIntakeAdv + "' > ");
                    }
                    else {
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].NameOfMedicine' value= '" + $(this).find("td").eq(0).text().trim() + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].Dosage' value= '" + $(this).find("td").eq(1).text().trim() + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].numberOfDays' value= '" + $(this).find("td").eq(2).text().trim() + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].comment' value= '" + $(this).find("td").eq(3).text().trim() + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].ManagementPlan' value= '" + $(this).find("td").eq(4).text().trim() + "' > ");

                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].weight' value= '" + $(this).find("td").eq(6).text().trim() + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].newmedicine' value= '" + $(this).find("td").eq(7).text().trim() + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].typeofmedicine' value= '" + $(this).find("td").eq(5).text().trim() + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].TypeOfIntakeAdv' value= '" + $(this).find("td").eq(8).text().trim() + "' > ");
                        $("#formPost").prepend("<input type='hidden' name= '" + listName + "[" + qtd + "].PrescriptionID' value= '" + hv + "' > ");



                    }
                    qtd += 1;
                });
                return true;
            }
            else {

                return false;}

        }
        else {
            alert("Please save clinical examination!");
            return false;
        }

    }

    function DeleteExistingMedicine() {
        debugger;
        var medicineID = $("#NameOfMedicine option:selected").val();
        var medicinename = $("#NameOfMedicine option:selected").text();
        if (medicineID != "") {

            $.ajax({
                type: 'POST',
                url: "/HospitalManagment/OPD/DeleteExistingMedicine",
                data: {
                    MedicineId: medicineID
                },
                success: function (view) {
                    debugger;
                                        var txt = $('#NameOfMedicine').html();
                    var removeStr = "<option value=\"" + medicineID.toString() + "\">" + medicinename + "</option>";
                    var newHtml = txt.replace(removeStr, "");

                    $('#NameOfMedicine').html(newHtml);

                    $('#NameOfMedicine').selectmenu().selectmenu("refresh");

                },
                error: function (view) {
                    alert('error...!');

                }
            });

        }
    }

    function removeRow(id, PrescriptionID) {
        var controlToBeRemoved = "#tablePost" + id;
        $(controlToBeRemoved).remove();

        if (PrescriptionID > 0) {
            $.post("/HospitalManagment/OPD/DeleteMedicine", { prescriptionID: PrescriptionID, opd: test }, function (data) {

            });
        }

    }


    $(function() {
        //Dropdownlist Selectedchange event
        debugger;
        $('#NameOfMedicine').change(function() {

            if ($("#NameOfMedicine option:selected").text() == "Other") {

                $('#NewMedicine').attr('readonly', false);
                $('#otherMedicine').attr("style", "display: inline");
                $('#otherMedicineLbl').attr("style", "display: inline");


            } else {

                $('#NewMedicine').attr('readonly', true);
                $('#otherMedicine').attr("style", "display: none");
                $('#otherMedicineLbl').attr("style", "display: none");


            }

        });
    });

    function PreviousPrescriptionDetails() {
        debugger;
        var personId = @Html.Raw(Json.Encode(Model.PersonId));
        if (personId > 0) {
            $.ajax({
                type: 'GET',
                url: "/HospitalManagment/OPD/GetPreviousPrescriptionDetails",
                data: {
                    personId: personId
                },
                success: function (view) {
                    debugger;
                    //alert(view);

                    $('#PopUpDetailsResult').html(view);
                    $('#PopUpDetailsResult').dialog({ width: 1000, height: 300, title: "Previous Prescriptions" }).dialogNoClose();


                },
                error: function (view) {
                    alert(view);
                    //$('#loaderSelectProducts').css('display', 'none');
                }
            });
        }
    }
</script>




<div class="form-horizontal; ad" ;>

    <table border="0">

        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.prscriptionList[0].ManagementPlan, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <textarea rows="3" id="ManagementPlan" class="form-control"></textarea>
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.prscriptionList[0].Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        <textarea rows="3" id="Comment" class="form-control"></textarea>
                    </div>
                </div>
            </td>

            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.prscriptionList[0].NextOpointmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.prscriptionList[0].NextOpointmentDate, new { Class = "input-group datepicker", @readonly = true })
                        @Html.ValidationMessageFor(model => model.prscriptionList[0].NextOpointmentDate, "", new { @class = "text-danger" })
                    </div>
                </div>

            </td>
            <td>&nbsp;&nbsp;</td>
            <td><input type="button" name="submit" value="Sonography"  /></td>
            <td><input type="button" name="submit" value="MTP" /></td>
            <td><input type="button" name="submit" value="Admit" /></td>

        </tr>
    </table>
    @Html.Label("Prescription")
    <hr />
    <table border="0">


        <tr>
            <td>Type:</td>
            <td>Medicine:</td>
            <td><div id="otherMedicineLbl" style="display: none">New Medicine Name:</div></td>
            <td>Dose (In mg):</td>
            <td>Duration:</td>
            <td>Days:</td>
            <td>Intake Advise:</td>


        </tr>
        <tr>
            <td>
                <div class="form-group">

                    <div class="col-md-10">
                        @{
                            var typeOfMedicine = TempData.Peek("TypeOfMedicine") as SelectList;
                            if (typeOfMedicine != null)
                            {
                                @Html.DropDownList("TypeOfMedicine", typeOfMedicine, "Tablet")
                                @Html.ValidationMessageFor(model => model.prscriptionList[0].TypeOfMedicine, "", new { @class = "text-danger" })
                            }
                        }
                        @Html.ValidationMessageFor(model => model.prscriptionList[0].TypeOfMedicine, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    <div class="col-md-10">
                        @{
                            var data = TempData.Peek("MedicineNames") as SelectList;
                            if (data != null)
                            {
                                @Html.DropDownList("NameOfMedicine", data, "Select Medicine", new { style = "width: 150px;" })
                                @Html.ValidationMessageFor(model => model.prscriptionList[0].NameOfMedicine, "", new { @class = "text-danger" })
                            }
                        }

                    </div>

                </div>
            </td>

            <td>
                <div id="otherMedicine" style="display: none"> @Html.TextBox("NewMedicine") </div>
            </td>
            <td>
                <div class="form-group" id="MedicinesWeight">

                    <div class="col-md-10">
                        @Html.TextBox("NewWeight", null, new { @class = "medium" })

                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    <div class="col-md-10">
                        <input type="text" id="Dosage" class="medium" />
                        @Html.ValidationMessageFor(model => model.prscriptionList[0].Dosage, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>

            <td>
                <div class="form-group">
                    <div class="col-md-10">
                        <input type="text" id="NumberOfDays" class="medium" />
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">

                    <div class="col-md-10">
                        @{
                            var typeOfIntakeAdv = TempData.Peek("TypeOfIntakeAdv") as SelectList;
                            if (typeOfIntakeAdv != null)
                            {
                                @Html.DropDownList("TypeOfIntakeAdv", typeOfIntakeAdv, (SelectList)ViewBag.DefaultTypeOfIntakeAdv)
                                @Html.ValidationMessageFor(model => model.prscriptionList[0].TypeOfIntakeAdv, "", new { @class = "text-danger" })
                            }
                        }
                        @Html.ValidationMessageFor(model => model.prscriptionList[0].TypeOfIntakeAdv, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>

        </tr>
        <tr>
            <td></td>
            <td><input type="button" name="submit" value="Remove" onclick="return DeleteExistingMedicine();" /></td>
        </tr>
    </table>





    <div class="form-group">

        <div class="col-md-10">

            @Html.ValidationMessageFor(model => model.prscriptionList[0].Comment, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">

        </div>
    </div>
    <div>
        <table id="tablePost" class="showborder">
            <thead>
                <tr>
                    <th>Medicine Name</th>
                    <th>Dosage</th>
                    <th>Number Of Days</th>
                    <th>Advise</th>
                    <th>ManagementPlan</th>
                    <th>Medicine Type</th>
                    <th>Weight</th>
                    <th>New Medicine</th>
                    <th>Intake Advise</th>
                    <th>Remove</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.prscriptionList != null && Model.prscriptionList.Count > 0)
                {
                    int index = 0;
                    foreach (var item in Model.prscriptionList)
                    {
                        if (item.TypeOfMedicine != null)
                        {
                            index++;
                            var trid = string.Concat("tablePost", index);
                            <tr id="@trid">
                                <td>

                                    @if (item.NameOfMedicine == "Other")
                                    {
                                        @item.newmedicine
                                    }
                                    else
                                    {
                                        @item.NameOfMedicine
                                    }
                                </td>
                                <td>
                                    @item.Dosage

                                </td>
                                <td>
                                    @item.NumberOfDays
                                </td>
                                <td>
                                    @item.Comment

                                </td>
                                <td>
                                    @item.ManagementPlan
                                </td>
                                <td>
                                    @item.TypeOfMedicine
                                </td>
                                <td>
                                    @item.Weight

                                </td>
                                <td>
                                    @item.newmedicine
                                </td>
                                <td>
                                    @item.TypeOfIntakeAdv
                                </td>
                                <td>
                                    <input id='btnAddBook' type='button' value='Remove' onclick='return removeRow(  @index , @item.PrescriptionID );' />
                                </td>
                                @Html.Hidden("PrescriptionID" + index, item.PrescriptionID)
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>
    </div>
</div>


<div style="display: none;" id="divPrintPrescription" onload="window.print();">
    <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
    <table>

        <tr>

            <td>OPD No:</td>
            <td>@Model.MonthOPDNo</td>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>

            <td>Date:</td>
            <td>@DateTime.Now.ToString("dd-MMM-yyyy hh:mm")</td>
        </tr>
    </table>
    <hr />
    <table>
        <tr>
            <td>Name:</td>
            <td>@Model.PatientFullName</td>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td>@Model.Age Years-@Model.Gender</td>

        </tr>
    </table>
    <hr />
    <table>
        <tr>
            <td>Address:</td>
            <td>@Model.Address</td>
            <td>Contact No. @Model.Mobile</td>
        </tr>
    </table>
    <hr style="border-bottom: 3px solid black;" />

    <table style="width: 100%">
        <thead>
            <tr>
                <td><span style ="font-size: 40px; font-family: sans-serif; color:blue">&#8478;</span>
                </td>

            </tr>
        </thead>
        <tbody style="width: 100%">

            @if (Model.prscriptionList != null && Model.prscriptionList.Count > 0)
            {
                string strComment = string.Empty;
                foreach (var item in Model.prscriptionList)
                {
                    <tr style="border-bottom: 1px solid black;">
                        @{
                            string nameOfMedicine = string.Empty;
                            if (item.NameOfMedicine != null && item.NameOfMedicine.Equals("Other"))
                            {
                                nameOfMedicine = item.newmedicine;
                            }
                            else
                            {
                                nameOfMedicine = item.NameOfMedicine;
                            }
                            string medicineDetails = string.Empty;
                            int quantity = 1;
                            switch (item.TypeOfMedicine)
                            {
                                case "Solution":
                                case "Syrup":
                                    medicineDetails = item.TypeOfMedicine + "  " + nameOfMedicine;
                                    break;
                                case "Tablet":
                                case "Capsule":
                                    medicineDetails = item.TypeOfMedicine + "  " + nameOfMedicine + "..." + item.Weight + " mg";
                                    quantity = item.Dosage * item.NumberOfDays;
                                    break;
                                case "Creame":
                                case "Ointment":
                                    medicineDetails = item.TypeOfMedicine + "  " + nameOfMedicine + "..." + item.Weight + " grm";
                                    break;
                                case "Injection":
                                    medicineDetails = item.TypeOfMedicine + "  " + nameOfMedicine;
                                    quantity = item.Dosage * item.NumberOfDays;
                                    break;
                                case "Saline":
                                    medicineDetails = item.TypeOfMedicine + "  " + nameOfMedicine + "..." + item.Weight + " ml";
                                    quantity = item.Dosage * item.NumberOfDays;
                                    break;
                                case "Drops":
                                case "Sachet":
                                    medicineDetails = item.TypeOfMedicine + "  " + nameOfMedicine;
                                    break;
                                case "Other":
                                    medicineDetails = item.TypeOfMedicine + "  " + nameOfMedicine + "..." + item.Weight;
                                    quantity = item.Dosage * item.NumberOfDays;
                                    break;
                            }

                            string dosageDetails = string.Empty;
                            var dosageCaseNumber = item.Dosage;
                            if (dosageCaseNumber > 3)
                            {
                                dosageCaseNumber = 4;
                            }
                            switch (dosageCaseNumber)
                            {
                                case 1:
                                    dosageDetails = "1 सकाळी ..." + item.NumberOfDays + " दिवस";
                                    break;
                                case 2:
                                    dosageDetails = "1 सकाळी  1 रात्री..." + item.NumberOfDays + " दिवस";
                                    break;
                                case 3:
                                    dosageDetails = "1 सकाळी 1 दुपारी  1 रात्री..." + item.NumberOfDays + " दिवस";
                                    break;
                                case 4:
                                    dosageDetails = "दररोज " + item.Dosage + " वेळा ..." + item.NumberOfDays + " दिवस";
                                    break;
                                default:
                                    dosageDetails = "";
                                    break;
                            }
                            string intakeAdv = string.Empty;
                            switch (item.TypeOfIntakeAdv)
                            {
                                case "After Food":
                                    intakeAdv = " जेवणानंतर ";
                                    break;
                                case "Before Food":
                                    intakeAdv = " जेवणा आधी ";
                                    break;
                                case "Before BedTime":
                                    intakeAdv = " झोपण्यापूर्वी ";
                                    break;
                                case "In The Morning After Get Up":
                                    intakeAdv = " सकाळी उठल्या नंतर ";
                                    break;
                                case "Not Applicable":
                                    intakeAdv = " ";
                                    break;
                                case "2Tfs Thirce A Day With Glass Of Water":
                                    intakeAdv = " दररोज तीन वेळा दोन चमचे एक ग्लास पाण्या बारोबार ..." + item.NumberOfDays + "दिवस";
                                    quantity = 1;
                                    break;
                                case "One Sachet Twice A Day With Glass Of Water":
                                    intakeAdv = " एक पुडी दोन वेळा एक ग्लास पाण्या बारोबार ..." + item.NumberOfDays + "दिवस";
                                    quantity = 1 * item.NumberOfDays;
                                    break;
                                case "One Sachet Once A Week With Glass Of Milk Or Water":
                                    intakeAdv = " एक पुडी दोन वेळा एक ग्लास पाण्या किंवा दूध बारोबार ..." + item.NumberOfDays + " आठवडे";
                                    quantity = 1 * item.NumberOfDays;
                                    break;
                                case "One Tablet Once A Week":
                                    intakeAdv = " एक टॅब्लेट आठवड्यात एकदा ..." + item.NumberOfDays + " आठवडे";
                                    quantity = 1 * item.NumberOfDays;
                                    break;
                                default:
                                    intakeAdv = " ";
                                    break;
                            }

                            <td width="60%">@medicineDetails <br /> @dosageDetails &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @intakeAdv</td>

                            <td width="10%">( @quantity )</td>


                        }
                    </tr>
                                strComment = strComment + " " + @item.Comment;
                            }
                            <tr><td><br /></td></tr>
                            <tr>
                                <td colspan="3">
                                    @{var opointmentDateTime = ((string[])(@Model.prscriptionList[0].NextOpointmentDate))[0];
                                        if (opointmentDateTime != "")
                                        {
                                            <label> पुढील तपासणी तारीख आणि वेळ :  @opointmentDateTime</label>
                                        }

                                    }
                                </td>
                            </tr>
                            <tr><td><label>@strComment</label></td></tr>
                            <tr>
                                <td colspan="3" style="text-align: end;">
                                    <br />
                                    <br />
                                    <br />
                                    <label> .... Sign</label>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3">


                                    @*<input class="ad" type="submit" onclick="window.print();" name="Print" />*@
                                </td>
                            </tr>
                                        }
        </tbody>
    </table>


</div>