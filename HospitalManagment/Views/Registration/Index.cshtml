@model HospitalManagment.Models.Registration

@{
    ViewBag.Title = "Registration";
}

<h2>Registration</h2>

@using (Html.BeginForm("Registeration", "Registration"))
{
    @Html.ValidationSummary(true)
    @Html.ValidationMessage("Error")
    <fieldset>
        <legend>Registration</legend>

        <div class="editor-label">
            @*@Html.LabelFor(model => model.UserId)*@
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.UserId)
            @*@Html.ValidationMessageFor(model => model.UserId)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactNumber)
            @Html.ValidationMessageFor(model => model.ContactNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ConfirmPassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ConfirmPassword)
            @Html.ValidationMessageFor(model => model.ConfirmPassword)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserType)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.UserType, new SelectList(Enum.GetValues(typeof(BusinessLayer.UserTypes))),
                    "Select UserType",
                    new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserType)
        </div>

        <div class="editor-label">
            @*@Html.LabelFor(model => model.PasswordSalt)*@
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.PasswordSalt)
            @*@Html.ValidationMessageFor(model => model.PasswordSalt)*@
        </div>

        <div class="editor-label">
            @*@Html.LabelFor(model => model.CreatedDate)*@
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.CreatedDate)
            @*@Html.ValidationMessageFor(model => model.CreatedDate)*@
        </div>

        <div class="editor-label">
            @*@Html.LabelFor(model => model.IsActive)*@
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.IsActive)
            @*@Html.ValidationMessageFor(model => model.IsActive)*@
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
